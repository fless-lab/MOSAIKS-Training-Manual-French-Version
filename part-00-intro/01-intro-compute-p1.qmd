# Configuration de l'environnement de calcul {#sec-intro-compute}

## Vue d'ensemble

Ce cours utilise principalement Google Colaboratory ([Colab](https://colab.research.google.com/)) pour nos besoins en calcul. Colab est une plateforme cloud gratuite qui permet d'écrire et d'exécuter du code Python via votre navigateur. Elle intègre de nombreuses librairies pré-installées et offre un accès gratuit à des ressources de calcul, incluant des GPUs.

---

## Prérequis

Pour participer aux sections de code de ce cours, vous aurez besoin de :

- Un laptop ou un desktop
- Une connexion internet stable
- Un compte Google (si vous n'en avez pas, créez-en un sur [accounts.google.com](https://accounts.google.com))
- Un navigateur web (les navigateurs basés sur [Chromium](https://en.wikipedia.org/wiki/Chromium_(web_browser)) sont recommandés)

---

## Démarrage avec Google Colab

### Accès à Colab

1. Allez sur [colab.research.google.com](https://colab.research.google.com)
2. Connectez-vous avec votre compte Google 
3. Cliquez sur **"New Notebook"** pour créer votre premier notebook Colab

### Comprendre l'interface

L'interface Colab est similaire aux notebooks Jupyter, avec plusieurs composants clés :

- **Menu Bar**: Contient les options `File`, `Edit`, `View`, `Insert`, `Runtime`, `Tools`, et `Help`
- **Toolbar**: Accès rapide aux actions courantes comme l'ajout de cellules de code/texte
- **Zone des Cellules**: Où vous écrivez et exécutez le code ou le texte
- **Runtime Status**: Affiche l'état de la connexion de votre notebook aux serveurs Google

### Opérations de base

1. **Création de Cellules**:
   - Cellules de code : Cliquez sur `+ Code`. Supporte Python ou R selon le runtime sélectionné
   - Cellules de texte : Cliquez sur `+ Text`. Supporte le Markdown et les tags HTML pour la documentation

2. **Exécution des Cellules**:
   - Cliquez sur le bouton play à côté de la cellule ou utilisez `Shift`+`Enter`
   - Vous pouvez aussi sélectionner `Runtime` > `Run the focused cell` (ou une autre option `Run`) depuis le menu

### Features importantes

1. **Type de Runtime**:
   - Cliquez sur `Runtime` > `Change runtime type`
   - Sélectionnez `Python 3` comme runtime
   - Pour l'accès GPU : Changez l'accélérateur hardware pour un des types de `GPU` proposés selon vos besoins

2. **Gestion des Fichiers**:
   - Les fichiers uploadés sur Colab sont temporaires et seront perdus à la déconnexion du runtime
   - Connectez-vous à Google Drive et sauvegardez vos outputs pour un stockage persistant :
     ```python
     from google.colab import drive
     drive.mount('/content/drive')
     ```

3. **Installation des Packages :**

Pour installer des packages additionnels :

::: {.panel-tabset}
## conda
```python
# Warning : l'utilisation de "!conda install" n'est pas recommandée. 
# En règle générale, utilisez la commande magique "%conda install"
%conda install <package_name>
```
## pip
```python
# Warning : l'utilisation de "!pip install" n'est pas recommandée. 
# En règle générale, utilisez la commande magique "%pip install"
%pip install <package_name>
```
:::

### Best practices

1. **Sauvegarde de votre Travail**:
   - Les liens dans ce manuel créeront une nouvelle copie d'un notebook car ils sont sauvegardés sur GitHub
   - Pour sauvegarder vos modifications, cliquez sur `File` > `Save a copy in Drive`
   - Téléchargez localement les notebooks importants comme backup

2. **Gestion des Ressources**:
   - Fermez les notebooks inutilisés pour libérer des ressources
   - Soyez conscient des timeouts d'inactivité (les notebooks se déconnectent après une période d'inactivité prolongée)

3. **Usage Mémoire**:
   - Surveillez l'usage mémoire via `Runtime` > `View resources`
   - La version gratuite de Colab fournit une mémoire très limitée (12GB) qui peut être insuffisante pour les larges datasets ou les modèles complexes

### Raccourcis clavier

Voici quelques raccourcis clavier utiles pour travailler dans Colab :

::: {.panel-tabset}
## Mac
| Raccourci      | Action                          |
|----------------|--------------------------------|
| Shift+Enter    | Exécuter la cellule et passer à la suivante |
| Option+Enter   | Exécuter la cellule et en insérer une en dessous |
| ⌘+M A         | Insérer une cellule de code au-dessus |
| ⌘+M B         | Insérer une cellule de code en dessous |
| ⌘+M M         | Convertir en cellule de texte |

## Windows/Linux
| Raccourci      | Action                          |
|----------------|--------------------------------|
| Shift+Enter    | Exécuter la cellule et passer à la suivante |
| Alt+Enter      | Exécuter la cellule et en insérer une en dessous |
| Ctrl+M A       | Insérer une cellule de code au-dessus |
| Ctrl+M B       | Insérer une cellule de code en dessous |
| Ctrl+M M       | Convertir en cellule de texte |
:::

### Problèmes courants et solutions

1. **Déconnexions du Runtime**:
   - Cliquez sur **"Reconnect"** lorsque vous êtes invité
   - Vos variables seront réinitialisées, mais le code sauvegardé restera

2. **Problèmes d'installation des Packages**:
   - Redémarrez le runtime après avoir installé de nouveaux packages
   - Utilisez `Runtime` > `Restart runtime`

3. **Erreurs de Mémoire**:
   - Effacez les variables inutiles au fur et à mesure
   - Considérez l'utilisation d'échantillons de données plus petits pendant le développement

::: {.callout-important}
Les erreurs de mémoire sont courantes lorsque vous travaillez avec de grands datasets ou des modèles complexes sur la version gratuite de Colab. Si vous rencontrez ces problèmes, considérez l'utilisation d'une version payante de Colab ou la connexion à une machine virtuelle Google Cloud Platform (VM).
:::

### Obtenir de l'aide

- Accédez à la documentation Colab : `Help` > `Frequently Asked Questions`
- Essayez d'utiliser Google Gemini pour obtenir de l'assistance en intelligence artificielle.

---

## Assistance en intelligence artificielle dans Colab

Google Gemini est un puissant assistant en intelligence artificielle intégré à Google Colab. Vous pouvez l'utiliser pour générer du code, des commentaires ou du texte Markdown pour améliorer vos notebooks. Gemini peut être accédé de plusieurs manières dans Colab, en commençant par sélectionner l'icône Gemini dans différentes parties de l'éditeur de notebook.

::: {.callout-note}
# Icône Gemini

<img src="https://lh3.googleusercontent.com/c-z7BK6NYcQIruZJd9A4KI1m8YrBauXH0VRglPudmj9Fgr5yzgJCsnaZ5W_nxZnB2hazA9hsg05uX1djFYPbMS-DsbYXp6UtVKFfdicBfF8klhVshJ8" width="50" height="50">

Recherchez cette icône pour indiquer où vous pouvez cliquer pour accéder à Gemini dans Colab.
:::

Voici quelques manières d'utiliser Google Gemini efficacement dans Colab :

### Support de conversation

Cliquez sur le bouton **Gemini** en haut à droite pour ouvrir une interface de conversation où vous pouvez poser des questions sur votre code, déboguer des problèmes ou obtenir des explications de concepts. Cette option est particulièrement utile pour les débutants ou pour résoudre des problèmes complexes.

### Génération de code

Utilisez l'option **"Générer du code"** (l'icône d'étoile) au-dessus de n'importe quelle cellule de code vide pour générer du nouveau code basé sur votre description. Vous pouvez lui demander de faire de nombreuses choses différentes, notamment :

- Charger un dataset appelé `my_data.csv`
- Tracer un histogramme des données
- Construire un modèle pour prédire `y` à partir de `X`

### Explication du code

Utilisez l'option **"Expliquer le code"** (l'icône d'étoile) au-dessus de n'importe quelle cellule de code complète pour ouvrir une interface de conversation qui expliquera automatiquement le code dans la cellule. C'est utile pour comprendre le code écrit par quelqu'un d'autre, apprendre de nouveaux concepts ou obtenir un second avis sur votre travail.

### Complétion du code

Colab fournit une complétion intelligente du code au fur et à mesure que vous tapez :

- Appuyez sur **Tab** pour accepter les suggestions
- Utilisez **Ctrl+Space** (Cmd+Space sur Mac) pour déclencher manuellement les suggestions
- Obtenez des documentation et des conseils de paramètres en temps réel

::: {.callout-note}
Bien que ces outils d'intelligence artificielle soient utiles, assurez-vous toujours de revoir et de comprendre le code qu'ils suggèrent avant de l'utiliser dans votre travail.
:::

---
