# Configuration de l'environnement de calcul {#sec-intro-compute}

## Aperçu

Ce cours utilise principalement Google Colaboratory ([Colab](https://colab.research.google.com/)) pour nos besoins en calcul. Colab est une plateforme gratuite basée sur le cloud qui vous permet d'écrire et d'exécuter du code Python via votre navigateur. Il est livré avec de nombreuses bibliothèques pré-installées et offre un accès gratuit à des ressources de calcul, y compris des GPUs.

---

## Prérequis

Pour participer aux parties pratiques de ce cours, vous aurez besoin de :

- Un ordinateur portable ou de bureau
- Une connexion Internet fiable
- Un compte Google (si vous n'en avez pas, créez-en un sur [accounts.google.com](https://accounts.google.com))
- Un navigateur web (les navigateurs basés sur [Chromium](https://en.wikipedia.org/wiki/Chromium_(web_browser)) sont recommandés)

---

## Prise en main de Google Colab

### Accéder à Colab

1. Allez sur [colab.research.google.com](https://colab.research.google.com)
2. Connectez-vous avec votre compte Google 
3. Cliquez sur **"Nouveau Notebook"** pour créer votre premier notebook Colab

### Comprendre l'interface

L'interface Colab est similaire aux notebooks Jupyter, avec quelques composants clés :

- **Barre de menu** : Contient les options `Fichier`, `Édition`, `Affichage`, `Insertion`, `Exécution`, `Outils` et `Aide`.
- **Barre d'outils** : Accès rapide aux actions courantes comme l'ajout de cellules de code/texte.
- **Zone des cellules** : Où vous écrivez et exécutez le code ou le texte.
- **État d'exécution** : Montre l'état de la connexion de votre notebook aux serveurs Google.

### Opérations de base

1. **Créer des cellules** :
   - Cellules de code : Cliquez sur `+ Code`. Supports le code Python ou R selon l'environnement d'exécution sélectionné
   - Cellules de texte : Cliquez sur `+ Texte`. Supports le Markdown et les balises HTML pour la documentation

2. **Exécuter des cellules** :
   - Cliquez sur le bouton lecture à côté de la cellule ou utilisez `Maj`+`Entrée`
   - Vous pouvez aussi sélectionner `Exécution` > `Exécuter la cellule sélectionnée` (ou une autre option `Exécuter`) dans le menu

### Fonctionnalités importantes

1. **Type d'environnement** :
   - Cliquez sur `Exécution` > `Modifier le type d'environnement d'exécution`
   - Sélectionnez `Python 3` comme environnement
   - Pour l'accès GPU : Changez l'accélérateur matériel pour l'un des types de `GPU` proposés si nécessaire

2. **Gestion des fichiers** :
   - Les fichiers téléchargés sur Colab sont temporaires et seront perdus à la déconnexion de l'environnement
   - Connectez-vous à Google Drive et sauvegardez les sorties pour un stockage permanent :
     ```python
     from google.colab import drive
     drive.mount('/content/drive')
     ```

3. **Installation des packages :**

Installez des packages supplémentaires en utilisant :

::: {.panel-tabset}
## conda
```python
# Attention : l'utilisation de "!conda install" n'est pas recommandée.
# En règle générale, utilisez plutôt la commande magique "%conda install"
%conda install <nom_du_package>
```
## pip
```python
# Attention : l'utilisation de "!pip install" n'est pas recommandée.
# En règle générale, utilisez plutôt la commande magique "%pip install"
%pip install <nom_du_package>
```
:::

### Bonnes pratiques

1. **Sauvegardez votre travail** :
   - Les liens dans ce manuel créeront une nouvelle copie d'un notebook car ils sont sauvegardés sur GitHub.
   - Pour sauvegarder vos modifications, cliquez sur `Fichier` > `Enregistrer une copie dans Drive`
   - Téléchargez localement les notebooks importants comme sauvegardes

2. **Gestion des ressources** :
   - Fermez les notebooks inutilisés pour libérer des ressources
   - Soyez conscient des délais d'inactivité (les notebooks se déconnectent après une inactivité prolongée)

3. **Utilisation de la mémoire** :
   - Surveillez l'utilisation de la mémoire via `Exécution` > `Voir les ressources`
   - La version gratuite de Colab fournit une mémoire très limitée (12 Go) et peut ne pas être suffisante pour les grands jeux de données ou les modèles complexes

### Raccourcis clavier

Voici quelques raccourcis clavier utiles pour travailler dans Colab :

::: {.panel-tabset}

## Windows/Linux

| Raccourci      | Action                                |
|----------------|:--------------------------------------|
| Ctrl+M H       | Voir les raccourcis clavier           |
| Ctrl+Entrée    | Exécuter la cellule courante          |
| Maj+Entrée     | Exécuter et passer à la suivante      |
| Alt+Entrée     | Exécuter et insérer en dessous        |
| Ctrl+M A       | Insérer cellule de code au-dessus     |
| Ctrl+M B       | Insérer cellule de code en dessous    |
| Ctrl+M M       | Convertir en cellule de texte         |
| Ctrl+M Y       | Convertir en cellule de code          |
| Ctrl+M D       | Supprimer la cellule courante         |
| Ctrl+M L       | Afficher/masquer numéros de ligne     |
| Ctrl+M O       | Afficher/masquer la sortie            |
| Ctrl+M X       | Couper la cellule                     |
| Ctrl+M C       | Copier la cellule                     |
| Ctrl+M V       | Coller la cellule en dessous          |
| Maj+Haut/Bas   | Sélectionner plusieurs cellules       |
| Ctrl+F         | Rechercher et remplacer               |
| Ctrl+S         | Sauvegarder le notebook               |

: Raccourcis clavier Windows/Linux {#tbl-windows-linux tbl-colwidths="[25,75]"}

## Mac

| Raccourci      | Action                                |
|:---------------|:--------------------------------------|
| ⌘+M H         | Voir les raccourcis clavier           |
| ⌘+Entrée      | Exécuter la cellule courante          |
| Maj+Entrée     | Exécuter et passer à la suivante      |
| Option+Entrée  | Exécuter et insérer en dessous        |
| ⌘+M A         | Insérer cellule de code au-dessus     |
| ⌘+M B         | Insérer cellule de code en dessous    |
| ⌘+M M         | Convertir en cellule de texte         |
| ⌘+M Y         | Convertir en cellule de code          |
| ⌘+M D         | Supprimer la cellule courante         |
| ⌘+M L         | Afficher/masquer numéros de ligne     |
| ⌘+M O         | Afficher/masquer la sortie            |
| ⌘+M X         | Couper la cellule                     |
| ⌘+M C         | Copier la cellule                     |
| ⌘+M V         | Coller la cellule en dessous          |
| Maj+Haut/Bas   | Sélectionner plusieurs cellules       |
| ⌘+F           | Rechercher et remplacer               |
| ⌘+S           | Sauvegarder le notebook               |

: Raccourcis clavier Mac {#tbl-mac tbl-colwidths="[25,75]"}

:::

### Problèmes courants et solutions

1. **Déconnexions de l'environnement** :
   - Cliquez sur **"Reconnecter"** quand demandé
   - Vos variables seront réinitialisées, mais le code sauvegardé reste

2. **Problèmes d'installation de packages** :
   - Redémarrez l'environnement après l'installation de nouveaux packages
   - Utilisez `Exécution` > `Redémarrer l'environnement d'exécution`

3. **Erreurs de mémoire** :
   - Supprimez les variables inutiles au fur et à mesure
   - Envisagez d'utiliser des échantillons de données plus petits pendant le développement

::: {.callout-important}
Les erreurs de mémoire sont courantes lors du travail avec de grands jeux de données ou des modèles complexes sur la version gratuite de Colab. Si vous rencontrez ces problèmes, envisagez d'utiliser une version payante de Colab ou de connecter une machine virtuelle Google Cloud Platform (VM).
:::

### Obtenir de l'aide

- Accédez à la documentation Colab : `Aide` > `Questions fréquentes`
- Essayez d'utiliser Google Gemini pour l'assistance IA.

---

## Assistance IA dans Colab

Google Gemini est un puissant assistant IA intégré de manière transparente à Google Colab. Vous pouvez l'utiliser pour générer du code, des commentaires ou du texte markdown pour améliorer vos notebooks. Gemini est accessible de plusieurs façons dans Colab, toutes commençant par la sélection de l'icône Gemini dans différentes parties de l'éditeur de notebook.

::: {.callout-note}
# Icône Gemini

<img src="https://lh3.googleusercontent.com/c-z7BK6NYcQIruZJd9A4KI1m8YrBauXH0VRglPudmj9Fgr5yzgJCsnaZ5W_nxZnB2hazA9hsg05uX1djFYPbMS-DsbYXp6UtVKFfdicBfF8klhVshJ8" width="50" height="50">

Cherchez cette icône pour indiquer où vous pouvez cliquer pour accéder à Gemini dans Colab.
:::

Voici quelques façons d'utiliser efficacement Google Gemini dans Colab :

### Support par chat

Cliquez sur le bouton **Gemini** dans le coin supérieur droit pour ouvrir une interface de chat où vous pouvez poser des questions sur votre code, déboguer des problèmes ou obtenir des explications sur des concepts. Cette option est particulièrement utile pour les débutants ou pour résoudre des problèmes complexes.

### Génération de code

Utilisez l'option **"Générer du code"** (l'icône étincelle) au-dessus de n'importe quelle cellule de code **vide** pour générer du nouveau code basé sur votre description. Vous pouvez lui demander de faire différentes choses, notamment :

- Charger un jeu de données appelé `mes_donnees.csv`
- Tracer un histogramme des données
- Construire un modèle pour prédire `y` à partir de `X`

### Explication de code

Sélectionnez du code existant et utilisez l'option **"Expliquer"** pour obtenir une explication détaillée de ce que fait le code. Gemini peut :

- Décomposer des fonctions complexes
- Expliquer les algorithmes
- Identifier les problèmes potentiels

### Documentation

Utilisez Gemini pour générer de la documentation pour votre code. Il peut :

- Créer des docstrings
- Écrire des descriptions de fonctions
- Générer des exemples d'utilisation

::: {.callout-tip}
Bien que Gemini soit un outil puissant, vérifiez toujours ses suggestions et testez le code généré. L'IA peut parfois faire des erreurs ou proposer des solutions non optimales.
:::

---

## Alternatives à Colab

### Environnement local

Si vous préférez travailler localement, vous pouvez configurer un environnement Python sur votre machine :

1. **Installer Miniconda** :
   - Téléchargez l'installateur approprié depuis [Miniconda](https://docs.conda.io/en/latest/miniconda.html)
   - Suivez les instructions d'installation pour votre système d'exploitation

2. **Créer un environnement** :
   ```bash
   conda create -n mosaiks python=3.9
   conda activate mosaiks
   ```

3. **Installer les packages requis** :
   ```bash
   pip install -r requirements.txt
   ```

### Autres plateformes cloud

- **Kaggle Notebooks** : Similaire à Colab avec plus de RAM gratuite
- **Amazon SageMaker** : Solution professionnelle avec plus de ressources
- **Azure Notebooks** : Alternative Microsoft avec bonne intégration Azure

::: {.callout-note}
# Choix de la plateforme

Choisissez votre plateforme en fonction de vos besoins :
- **Colab** : Idéal pour l'apprentissage et les projets légers
- **Local** : Meilleur pour le développement régulier
- **Cloud pro** : Nécessaire pour les grands projets
:::

## Ressources supplémentaires

### Documentation officielle
- [Guide Colab](https://colab.research.google.com/notebooks/basic_features_overview.ipynb)
- [FAQ Colab](https://research.google.com/colaboratory/faq.html)

### Tutoriels
- [Introduction à Colab](https://colab.research.google.com/notebooks/welcome.ipynb)
- [Astuces et techniques Colab](https://colab.research.google.com/notebooks/pro.ipynb)

### Forums et communauté
- [Stack Overflow - tag 'google-colab'](https://stackoverflow.com/questions/tagged/google-colab)
- [GitHub Issues](https://github.com/googlecolab/colabtools/issues)
